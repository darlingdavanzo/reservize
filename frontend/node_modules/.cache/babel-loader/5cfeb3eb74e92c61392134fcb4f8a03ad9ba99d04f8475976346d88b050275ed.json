{"ast":null,"code":"var _jsxFileName = \"/home/darling/Desktop/fullstack_projects/reservize/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  selectedDate,\n  setSelectedDate,\n  fullyBookedDays,\n  hasScrolled,\n  setHasScrolled\n}) => {\n  _s();\n  const today = new Date();\n  const [currentMonth, setCurrentMonth] = useState(today.getMonth());\n  const [currentYear, setCurrentYear] = useState(today.getFullYear());\n  const getDaysInMonth = (month, year) => {\n    const date = new Date(year, month, 1);\n    const days = [];\n    while (date.getMonth() === month) {\n      days.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n    return days;\n  };\n  const days = getDaysInMonth(currentMonth, currentYear);\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const firstDayOfWeek = days[0].getDay();\n  for (let i = 0; i < firstDayOfWeek; i++) {\n    days.unshift(null);\n  }\n  const handlePreviousMonth = () => {\n    if (currentMonth === today.getMonth() && currentYear === today.getFullYear()) {\n      return;\n    }\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n    setHasScrolled(true); // Allow free navigation after initial scroll\n  };\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n    setHasScrolled(true); // Allow free navigation after initial scroll\n  };\n  const isPastDate = date => {\n    const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    return date < todayDate;\n  };\n  useEffect(() => {\n    const selectedDateObj = new Date(selectedDate);\n    if (!hasScrolled && (selectedDateObj.getMonth() !== currentMonth || selectedDateObj.getFullYear() !== currentYear)) {\n      setCurrentMonth(selectedDateObj.getMonth());\n      setCurrentYear(selectedDateObj.getFullYear());\n    }\n  }, [selectedDate, currentMonth, currentYear, hasScrolled, setHasScrolled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-month\": currentMonth,\n    \"data-year\": currentYear,\n    className: \"calendar-month\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/3 text-left\",\n        children: !(currentMonth === today.getMonth() && currentYear === today.getFullYear()) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousMonth,\n          className: \"text-green-500 font-bold\",\n          children: \"\\u2190 Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg font-semibold text-center w-1/3\",\n        children: `${new Date(currentYear, currentMonth).toLocaleString('default', {\n          month: 'long'\n        })} ${currentYear}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/3 text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextMonth,\n          className: \"text-green-500 font-bold\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-2 mb-2 text-center font-semibold text-gray-700\",\n      children: weekdays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-2\",\n      children: days.map((day, index) => {\n        if (day === null) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 text-sm text-gray-400\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 20\n          }, this);\n        }\n        const dateString = `${day.getFullYear()}-${String(day.getMonth() + 1).padStart(2, '0')}-${String(day.getDate()).padStart(2, '0')}`;\n        const isBooked = fullyBookedDays[dateString];\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => !isBooked && !isPastDate(day) && setSelectedDate(dateString),\n          className: `p-2 text-sm rounded-lg border ${selectedDate === dateString ? 'bg-green-500 text-white' : isBooked || isPastDate(day) ? 'bg-gray-200 text-gray-400 cursor-not-allowed' : 'bg-gray-100 text-gray-900'}`,\n          disabled: isBooked || isPastDate(day),\n          children: day.getDate()\n        }, dateString, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"L4mJn1HmT3syal5HdIkVCkZyReU=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Calendar","selectedDate","setSelectedDate","fullyBookedDays","hasScrolled","setHasScrolled","_s","today","Date","currentMonth","setCurrentMonth","getMonth","currentYear","setCurrentYear","getFullYear","getDaysInMonth","month","year","date","days","push","setDate","getDate","weekdays","firstDayOfWeek","getDay","i","unshift","handlePreviousMonth","handleNextMonth","isPastDate","todayDate","selectedDateObj","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","map","day","index","dateString","String","padStart","isBooked","disabled","_c","$RefreshReg$"],"sources":["/home/darling/Desktop/fullstack_projects/reservize/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Calendar = ({ selectedDate, setSelectedDate, fullyBookedDays, hasScrolled, setHasScrolled }) => {\n  const today = new Date();\n  const [currentMonth, setCurrentMonth] = useState(today.getMonth());\n  const [currentYear, setCurrentYear] = useState(today.getFullYear());\n\n  const getDaysInMonth = (month, year) => {\n    const date = new Date(year, month, 1);\n    const days = [];\n    while (date.getMonth() === month) {\n      days.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n    return days;\n  };\n\n  const days = getDaysInMonth(currentMonth, currentYear);\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const firstDayOfWeek = days[0].getDay();\n  for (let i = 0; i < firstDayOfWeek; i++) {\n    days.unshift(null);\n  }\n\n  const handlePreviousMonth = () => {\n    if (currentMonth === today.getMonth() && currentYear === today.getFullYear()) {\n      return;\n    }\n    if (currentMonth === 0) {\n      setCurrentMonth(11);\n      setCurrentYear(currentYear - 1);\n    } else {\n      setCurrentMonth(currentMonth - 1);\n    }\n    setHasScrolled(true); // Allow free navigation after initial scroll\n  };\n\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0);\n      setCurrentYear(currentYear + 1);\n    } else {\n      setCurrentMonth(currentMonth + 1);\n    }\n    setHasScrolled(true); // Allow free navigation after initial scroll\n  };\n\n  const isPastDate = (date) => {\n    const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    return date < todayDate;\n  };\n\n  useEffect(() => {\n    const selectedDateObj = new Date(selectedDate);\n    if (!hasScrolled && (selectedDateObj.getMonth() !== currentMonth || selectedDateObj.getFullYear() !== currentYear)) {\n      setCurrentMonth(selectedDateObj.getMonth());\n      setCurrentYear(selectedDateObj.getFullYear());\n    }\n  }, [selectedDate, currentMonth, currentYear, hasScrolled, setHasScrolled]);\n\n  return (\n    <div data-month={currentMonth} data-year={currentYear} className=\"calendar-month\">\n      <div className=\"flex justify-between mb-4\">\n        <div className=\"w-1/3 text-left\">\n          {!(currentMonth === today.getMonth() && currentYear === today.getFullYear()) && (\n            <button onClick={handlePreviousMonth} className=\"text-green-500 font-bold\">\n              &larr; Prev\n            </button>\n          )}\n        </div>\n        <div className=\"text-lg font-semibold text-center w-1/3\">\n          {`${new Date(currentYear, currentMonth).toLocaleString('default', { month: 'long' })} ${currentYear}`}\n        </div>\n        <div className=\"w-1/3 text-right\">\n          <button onClick={handleNextMonth} className=\"text-green-500 font-bold\">\n            Next &rarr;\n          </button>\n        </div>\n      </div>\n      <div className=\"grid grid-cols-7 gap-2 mb-2 text-center font-semibold text-gray-700\">\n        {weekdays.map((day) => (\n          <div key={day}>{day}</div>\n        ))}\n      </div>\n      <div className=\"grid grid-cols-7 gap-2\">\n        {days.map((day, index) => {\n          if (day === null) {\n            return <div key={index} className=\"p-2 text-sm text-gray-400\" />;\n          }\n\n          const dateString = `${day.getFullYear()}-${String(day.getMonth() + 1).padStart(2, '0')}-${String(day.getDate()).padStart(2, '0')}`;\n          const isBooked = fullyBookedDays[dateString];\n          return (\n            <button\n              key={dateString}\n              onClick={() => !isBooked && !isPastDate(day) && setSelectedDate(dateString)}\n              className={`p-2 text-sm rounded-lg border ${\n                selectedDate === dateString\n                  ? 'bg-green-500 text-white'\n                  : isBooked || isPastDate(day)\n                  ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                  : 'bg-gray-100 text-gray-900'\n              }`}\n              disabled={isBooked || isPastDate(day)}\n            >\n              {day.getDate()}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}